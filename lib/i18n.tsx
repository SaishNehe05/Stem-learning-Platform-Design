"use client"

import { createContext, useContext, useState, useEffect, type ReactNode } from "react"

export type Language = "en" | "hi" | "mr"

export interface LanguageData {
  code: Language
  name: string
  nativeName: string
  flag: string
}

export const availableLanguages: LanguageData[] = [
  { code: "en", name: "English", nativeName: "English", flag: "üá∫üá∏" },
  { code: "hi", name: "Hindi", nativeName: "‡§π‡§ø‡§Ç‡§¶‡•Ä", flag: "üáÆüá≥" },
  { code: "mr", name: "Marathi", nativeName: "‡§Æ‡§∞‡§æ‡§†‡•Ä", flag: "üáÆüá≥" },
]

const translations = {
  en: {
    // App Info
    appName: "STEM Learning Hub",
    ruralLearning: "Rural Learning Platform",
    appDescription: "Interactive STEM education designed for rural students with offline support and engaging games.",
    learnChamp: "LearnChamp",
    stemGamesOffline: "STEM games ‚Äî offline & local languages",

    // Navigation & Status
    online: "Online",
    offline: "Offline",
    offlineMode: "Offline Mode",
    syncing: "Syncing...",
    synced: "Synced",
    pendingSync: "Pending sync ({count} items)",
    neverSynced: "Never synced",
    lastSyncDays: "Last sync {days} days ago",
    lastSyncHours: "Last sync {hours} hours ago",
    lastSyncMinutes: "Last sync {minutes} minutes ago",
    justSynced: "Just synced",

    dashboard: "Dashboard",
    challenges: "Challenges",
    achievements: "Achievements",
    topics: "Topics",
    avatar: "Avatar",
    games: "Games",

    quickGames: "Quick Games",
    recentAchievements: "Recent Achievements",
    dailyChallenge: "Daily Challenge",
    todaysChallenge: "Today's Challenge",
    studyTopics: "Study Topics",
    avatarCustomization: "Avatar Customization",

    gradeSubjects: "Grade {grade} Subjects",
    gradeDashboard: "Grade {grade} Dashboard",
    gradeTopics: "Grade {grade} Topics",

    welcomeBack: "Welcome back, {name}!",
    youngExplorer: "Young Explorer",
    stemChampion: "STEM Champion",
    stemExplorer: "STEM Explorer",
    readyToDiscover: "Ready to discover amazing STEM concepts?",
    readyToMaster: "Ready to master advanced STEM challenges?",

    progressToNextLevel: "Progress to next level",
    totalXP: "Total XP",
    dayStreak: "Day Streak",
    level: "Level",

    mathematics: "Mathematics",
    science: "Science",
    technology: "Technology",
    engineering: "Engineering",

    numberNinja: "Number Ninja",
    virtualLab: "Virtual Lab",
    codeQuest: "Code Quest",
    mathPuzzles: "Math puzzles & challenges",
    scienceExperiments: "Science experiments",
    programmingChallenges: "Programming challenges",

    startChallenge: "Start Challenge",
    viewAllGames: "View All Games",
    startYourFirstQuiz: "Start Your First Quiz",

    noAchievementsYet: "No achievements yet",
    completeFirstQuiz: "Complete your first quiz to unlock achievements!",
    quizzesCompleted: "quizzes completed",
    progress: "Progress",

    // Offline Messages
    youreOffline: "You're Offline",
    noConnection: "No internet connection detected",
    continueOffline: "Continue Learning Offline",
    tryAgain: "Try Again",

    // Common Actions
    back: "Back",

    // Authentication & Login
    studentLogin: "Student Login",
    facultyLogin: "Faculty Login",
    studentSignIn: "Student Sign In",
    studentSignUp: "Student Sign Up",
    facultySignIn: "Faculty Sign In",
    facultySignUp: "Faculty Sign Up",
    tryAsGuest: "Try as Guest",
    installApp: "Install App",

    // Home Page
    learnStemThrough: "Learn STEM through",
    funGames: "Fun Games",
    makingLearningFun: "Making Learning Fun",

    // Games
    memoryMaster: "Memory Master",
    scienceMemoryGame: "Science Memory Game",
    timeLimit: "Time Limit",
    goal: "Goal",
    challenge: "Challenge",
    xpReward: "XP Reward",
    congratulations: "Congratulations!",
    timesUp: "Time's Up!",
    matchesFound: "Matches Found",
    totalMoves: "Total Moves",
    xpEarned: "XP Earned",
    playAgain: "Play Again",
    backToGames: "Back to Games",
    startGame: "Start Game",
    matches: "matches",
    score: "Score",

    // Code Challenge
    codeChallenge: "Code Challenge",
    programmingChallenge: "Programming Challenge",
    language: "Language",
    points: "Points",
    codingComplete: "Coding Complete!",
    variablesInPython: "Variables in Python",
    forLoop: "For Loop",
    ifStatement: "If Statement",
    functionCall: "Function Call",
    listOperations: "List Operations",
    startCoding: "Start Coding",
    correct: "Correct!",
    incorrect: "Incorrect",

    // Brain Teaser
    brainBuster: "Brain Buster",
    engineeringLogicPuzzles: "Engineering Logic Puzzles",
    puzzles: "Puzzles",
    brainTeasers: "brain teasers",
    startThinking: "Start Thinking",
    engineeringChallenge: "Engineering Challenge",
    greatThinking: "Great thinking!",
    notQuiteRight: "Not quite right",
    brainPowerComplete: "Brain Power Complete!",

    // Quiz System
    quizComplete: "Quiz Complete!",
    finalScore: "Final Score",
    experiencePointsEarned: "Experience Points Earned",
    nextQuestion: "Next Question",
    completeQuiz: "Complete Quiz",
    easy: "Easy",
    medium: "Medium",
    hard: "Hard",

    // Score Display
    totalXpLabel: "Total XP",
    levelLabel: "Level",
    dayStreakLabel: "Day Streak",
    progressToLevel: "Progress to Level {level}",
    xpNeeded: "{xp} XP needed",
    achievementsCount: "{count} Achievements",
    rising: "Rising",

    // Daily Challenges
    dailyChallenges: "Daily Challenges",
    timeLeft: "{time} left",
    fractionMaster: "Fraction Master",
    circuitDetective: "Circuit Detective",
    codeNinja: "Code Ninja",
    solveFractionProblems: "Solve 10 fraction problems correctly",
    buildWorkingCircuits: "Build 3 working circuits in the lab",
    completePythonChallenges: "Complete 5 Python challenges",
    minLimit: "{min}min limit",

    // Achievements System
    achievementsTitle: "Achievements",
    unlocked: "Unlocked",
    total: "Total",
    firstSteps: "First Steps",
    streakMaster: "Streak Master",
    mathWizard: "Math Wizard",
    scienceExplorer: "Science Explorer",
    stemLegend: "STEM Legend",
    completeFirstGame: "Complete your first game",
    maintainLearningStreak: "Maintain a 7-day learning streak",
    scorePerfectMathGames: "Score 100% on 10 math games",
    completeAllLabExperiments: "Complete all virtual lab experiments",
    solveProgrammingChallenges: "Solve 50 programming challenges",
    reachLevel50AllSubjects: "Reach level 50 in all subjects",
    common: "Common",
    rare: "Rare",
    epic: "Epic",
    legendary: "Legendary",
    unlockedOn: "Unlocked on {date}",
    all: "All",

    // Material Upload
    uploadLearningMaterials: "Upload Learning Materials",
    subject: "Subject",
    gradeLevel: "Grade Level",
    materialTitle: "Material Title",
    description: "Description",
    selectFiles: "Select Files",
    uploading: "Uploading...",
    uploadMaterials: "Upload Materials",
    uploadedMaterials: "Uploaded Materials",
    selectSubject: "Select subject",
    selectGrade: "Select grade",
    enterDescriptiveTitle: "Enter a descriptive title",
    describeLearningMaterial: "Describe the learning material and how it should be used",
    dragDropFiles: "Drag and drop files here, or click to select",
    selectedFiles: "Selected Files",
    uploaded: "Uploaded",
    grade6: "Grade 6",
    grade7: "Grade 7",
    bothGrades: "Both Grades",

    // File Types and Sizes
    bytes: "Bytes",
    kb: "KB",
    mb: "MB",
    gb: "GB",

    // Game Specific Terms
    memoryMatchPairs: "8 pairs to match",
    fewerMovesHigherScore: "Fewer moves = higher score",
    upTo150XP: "Up to 150 XP",
    upTo100XP: "Up to 100 XP",
    upTo110XP: "Up to 110 XP",
    pythonBasics: "Python basics",
    codeProblems: "5 code problems",
    perCorrect: "20 per correct",
    perCorrectRange: "15-25 per correct",
    minutes: "minutes",

    // Time Formats
    hoursMinutes: "{hours}h {minutes}m",
    minutesSeconds: "{minutes}:{seconds}",

    // Common UI Elements
    continue: "Continue",
    cancel: "Cancel",
    save: "Save",
    delete: "Delete",
    edit: "Edit",
    close: "Close",
    open: "Open",
    loading: "Loading...",
    error: "Error",
    success: "Success",
    warning: "Warning",
    info: "Info",
  },

  hi: {
    // App Info
    appName: "STEM ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞",
    ruralLearning: "‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§Æ‡§Ç‡§ö",
    appDescription: "‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§õ‡§æ‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§î‡§∞ ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§ñ‡•á‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ STEM ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡•§",
    learnChamp: "‡§≤‡§∞‡•ç‡§®‡§ö‡•à‡§Ç‡§™",
    stemGamesOffline: "STEM ‡§ñ‡•á‡§≤ ‚Äî ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§î‡§∞ ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§≠‡§æ‡§∑‡§æ‡§è‡§Ç",

    // Navigation & Status
    online: "‡§ë‡§®‡§≤‡§æ‡§á‡§®",
    offline: "‡§ë‡§´‡§≤‡§æ‡§á‡§®",
    offlineMode: "‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§Æ‡•ã‡§°",
    syncing: "‡§∏‡§ø‡§Ç‡§ï ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...",
    synced: "‡§∏‡§ø‡§Ç‡§ï ‡§π‡•ã ‡§ó‡§Ø‡§æ",
    pendingSync: "‡§∏‡§ø‡§Ç‡§ï ‡§¨‡§æ‡§ï‡•Ä ‡§π‡•à ({count} ‡§Ü‡§á‡§ü‡§Æ)",
    neverSynced: "‡§ï‡§≠‡•Ä ‡§∏‡§ø‡§Ç‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§π‡•Å‡§Ü",
    lastSyncDays: "‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∏‡§ø‡§Ç‡§ï {days} ‡§¶‡§ø‡§® ‡§™‡§π‡§≤‡•á",
    lastSyncHours: "‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∏‡§ø‡§Ç‡§ï {hours} ‡§ò‡§Ç‡§ü‡•á ‡§™‡§π‡§≤‡•á",
    lastSyncMinutes: "‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∏‡§ø‡§Ç‡§ï {minutes} ‡§Æ‡§ø‡§®‡§ü ‡§™‡§π‡§≤‡•á",
    justSynced: "‡§Ö‡§≠‡•Ä ‡§∏‡§ø‡§Ç‡§ï ‡§π‡•Å‡§Ü",

    dashboard: "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    challenges: "‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡§æ‡§Ç",
    achievements: "‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡§æ‡§Ç",
    topics: "‡§µ‡§ø‡§∑‡§Ø",
    avatar: "‡§Ö‡§µ‡§§‡§æ‡§∞",
    games: "‡§ñ‡•á‡§≤",

    quickGames: "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§ñ‡•á‡§≤",
    recentAchievements: "‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡§æ‡§Ç",
    dailyChallenge: "‡§¶‡•à‡§®‡§ø‡§ï ‡§ö‡•Å‡§®‡•å‡§§‡•Ä",
    todaysChallenge: "‡§Ü‡§ú ‡§ï‡•Ä ‡§ö‡•Å‡§®‡•å‡§§‡•Ä",
    studyTopics: "‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§µ‡§ø‡§∑‡§Ø",
    avatarCustomization: "‡§Ö‡§µ‡§§‡§æ‡§∞ ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡§®",

    gradeSubjects: "‡§ï‡§ï‡•ç‡§∑‡§æ {grade} ‡§µ‡§ø‡§∑‡§Ø",
    gradeDashboard: "‡§ï‡§ï‡•ç‡§∑‡§æ {grade} ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    gradeTopics: "‡§ï‡§ï‡•ç‡§∑‡§æ {grade} ‡§µ‡§ø‡§∑‡§Ø",

    welcomeBack: "‡§µ‡§æ‡§™‡§∏‡•Ä ‡§™‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§, {name}!",
    youngExplorer: "‡§Ø‡•Å‡§µ‡§æ ‡§ñ‡•ã‡§ú‡§ï‡§∞‡•ç‡§§‡§æ",
    stemChampion: "STEM ‡§ö‡•à‡§Ç‡§™‡§ø‡§Ø‡§®",
    stemExplorer: "STEM ‡§ñ‡•ã‡§ú‡§ï‡§∞‡•ç‡§§‡§æ",
    readyToDiscover: "‡§Ö‡§¶‡•ç‡§≠‡•Å‡§§ STEM ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§ñ‡•ã‡§ú ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡§Ç?",
    readyToMaster: "‡§â‡§®‡•ç‡§®‡§§ STEM ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§æ‡§∞‡§§ ‡§π‡§æ‡§∏‡§ø‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡§Ç?",

    progressToNextLevel: "‡§Ö‡§ó‡§≤‡•á ‡§∏‡•ç‡§§‡§∞ ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ó‡§§‡§ø",
    totalXP: "‡§ï‡•Å‡§≤ XP",
    dayStreak: "‡§¶‡§ø‡§® ‡§ï‡•Ä ‡§≤‡§ï‡•Ä‡§∞",
    level: "‡§∏‡•ç‡§§‡§∞",

    mathematics: "‡§ó‡§£‡§ø‡§§",
    science: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®",
    technology: "‡§™‡•ç‡§∞‡•å‡§¶‡•ç‡§Ø‡•ã‡§ó‡§ø‡§ï‡•Ä",
    engineering: "‡§á‡§Ç‡§ú‡•Ä‡§®‡§ø‡§Ø‡§∞‡§ø‡§Ç‡§ó",

    numberNinja: "‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§®‡§ø‡§Ç‡§ú‡§æ",
    virtualLab: "‡§Ü‡§≠‡§æ‡§∏‡•Ä ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≤‡§æ",
    codeQuest: "‡§ï‡•ã‡§° ‡§ñ‡•ã‡§ú",
    mathPuzzles: "‡§ó‡§£‡§ø‡§§ ‡§™‡§π‡•á‡§≤‡§ø‡§Ø‡§æ‡§Ç ‡§î‡§∞ ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡§æ‡§Ç",
    scienceExperiments: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó",
    programmingChallenges: "‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡§æ‡§Ç",

    startChallenge: "‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    viewAllGames: "‡§∏‡§≠‡•Ä ‡§ñ‡•á‡§≤ ‡§¶‡•á‡§ñ‡•á‡§Ç",
    startYourFirstQuiz: "‡§Ö‡§™‡§®‡•Ä ‡§™‡§π‡§≤‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",

    noAchievementsYet: "‡§Ö‡§≠‡•Ä ‡§§‡§ï ‡§ï‡•ã‡§à ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø ‡§®‡§π‡•Ä‡§Ç",
    completeFirstQuiz: "‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•Ä ‡§™‡§π‡§≤‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§ï‡§∞‡•á‡§Ç!",
    quizzesCompleted: "‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§™‡•Ç‡§∞‡•ç‡§£",
    progress: "‡§™‡•ç‡§∞‡§ó‡§§‡§ø",

    // Offline Messages
    youreOffline: "‡§Ü‡§™ ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§π‡•à‡§Ç",
    noConnection: "‡§ï‡•ã‡§à ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ",
    continueOffline: "‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç",
    tryAgain: "‡§´‡§ø‡§∞ ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç",

    // Common Actions
    back: "‡§µ‡§æ‡§™‡§∏",

    // Authentication & Login
    studentLogin: "‡§õ‡§æ‡§§‡•ç‡§∞ ‡§≤‡•â‡§ó‡§ø‡§®",
    facultyLogin: "‡§∏‡§Ç‡§ï‡§æ‡§Ø ‡§≤‡•â‡§ó‡§ø‡§®",
    studentSignIn: "‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∏‡§æ‡§á‡§® ‡§á‡§®",
    studentSignUp: "‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∏‡§æ‡§á‡§® ‡§Ö‡§™",
    facultySignIn: "‡§∏‡§Ç‡§ï‡§æ‡§Ø ‡§∏‡§æ‡§á‡§® ‡§á‡§®",
    facultySignUp: "‡§∏‡§Ç‡§ï‡§æ‡§Ø ‡§∏‡§æ‡§á‡§® ‡§Ö‡§™",
    tryAsGuest: "‡§Ö‡§§‡§ø‡§•‡§ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§Ü‡§ú‡§º‡§Æ‡§æ‡§è‡§Ç",
    installApp: "‡§ê‡§™ ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç",

    // Home Page
    learnStemThrough: "STEM ‡§∏‡•Ä‡§ñ‡•á‡§Ç",
    funGames: "‡§Æ‡§ú‡§º‡•á‡§¶‡§æ‡§∞ ‡§ñ‡•á‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á",
    makingLearningFun: "‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Æ‡§ú‡§º‡•á‡§¶‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡§æ",

    // Games
    memoryMaster: "‡§Æ‡•á‡§Æ‡•ã‡§∞‡•Ä ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞",
    scienceMemoryGame: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§Æ‡•á‡§Æ‡•ã‡§∞‡•Ä ‡§ó‡•á‡§Æ",
    timeLimit: "‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§Æ‡§æ",
    goal: "‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø",
    challenge: "‡§ö‡•Å‡§®‡•å‡§§‡•Ä",
    xpReward: "XP ‡§™‡•Å‡§∞‡§∏‡•ç‡§ï‡§æ‡§∞",
    congratulations: "‡§¨‡§ß‡§æ‡§à ‡§π‡•ã!",
    timesUp: "‡§∏‡§Æ‡§Ø ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§!",
    matchesFound: "‡§Æ‡•à‡§ö ‡§Æ‡§ø‡§≤‡•á",
    totalMoves: "‡§ï‡•Å‡§≤ ‡§ö‡§æ‡§≤‡•á‡§Ç",
    xpEarned: "XP ‡§Ö‡§∞‡•ç‡§ú‡§ø‡§§",
    playAgain: "‡§´‡§ø‡§∞ ‡§ñ‡•á‡§≤‡•á‡§Ç",
    backToGames: "‡§ñ‡•á‡§≤‡•ã‡§Ç ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏",
    startGame: "‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    matches: "‡§Æ‡•à‡§ö",
    score: "‡§∏‡•ç‡§ï‡•ã‡§∞",

    // Code Challenge
    codeChallenge: "‡§ï‡•ã‡§° ‡§ö‡•Å‡§®‡•å‡§§‡•Ä",
    programmingChallenge: "‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§ö‡•Å‡§®‡•å‡§§‡•Ä",
    language: "‡§≠‡§æ‡§∑‡§æ",
    points: "‡§Ö‡§Ç‡§ï",
    codingComplete: "‡§ï‡•ã‡§°‡§ø‡§Ç‡§ó ‡§™‡•Ç‡§∞‡•ç‡§£!",
    variablesInPython: "Python ‡§Æ‡•á‡§Ç ‡§µ‡•á‡§∞‡§ø‡§è‡§¨‡§≤‡•ç‡§∏",
    forLoop: "For ‡§≤‡•Ç‡§™",
    ifStatement: "If ‡§∏‡•ç‡§ü‡•á‡§ü‡§Æ‡•á‡§Ç‡§ü",
    functionCall: "‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡•â‡§≤",
    listOperations: "‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ë‡§™‡§∞‡•á‡§∂‡§®‡•ç‡§∏",
    startCoding: "‡§ï‡•ã‡§°‡§ø‡§Ç‡§ó ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    correct: "‡§∏‡§π‡•Ä!",
    incorrect: "‡§ó‡§≤‡§§",

    // Brain Teaser
    brainBuster: "‡§¨‡•ç‡§∞‡•á‡§® ‡§¨‡§∏‡•ç‡§ü‡§∞",
    engineeringLogicPuzzles: "‡§á‡§Ç‡§ú‡•Ä‡§®‡§ø‡§Ø‡§∞‡§ø‡§Ç‡§ó ‡§≤‡•â‡§ú‡§ø‡§ï ‡§™‡§π‡•á‡§≤‡§ø‡§Ø‡§æ‡§Ç",
    puzzles: "‡§™‡§π‡•á‡§≤‡§ø‡§Ø‡§æ‡§Ç",
    brainTeasers: "‡§¨‡•ç‡§∞‡•á‡§® ‡§ü‡•Ä‡§ú‡§º‡§∞",
    startThinking: "‡§∏‡•ã‡§ö‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    engineeringChallenge: "‡§á‡§Ç‡§ú‡•Ä‡§®‡§ø‡§Ø‡§∞‡§ø‡§Ç‡§ó ‡§ö‡•Å‡§®‡•å‡§§‡•Ä",
    greatThinking: "‡§¨‡•á‡§π‡§§‡§∞‡•Ä‡§® ‡§∏‡•ã‡§ö!",
    notQuiteRight: "‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤ ‡§∏‡§π‡•Ä ‡§®‡§π‡•Ä‡§Ç",
    brainPowerComplete: "‡§¨‡•ç‡§∞‡•á‡§® ‡§™‡§æ‡§µ‡§∞ ‡§™‡•Ç‡§∞‡•ç‡§£!",

    // Quiz System
    quizComplete: "‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§™‡•Ç‡§∞‡•ç‡§£!",
    finalScore: "‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∏‡•ç‡§ï‡•ã‡§∞",
    experiencePointsEarned: "‡§Ö‡§®‡•Å‡§≠‡§µ ‡§Ö‡§Ç‡§ï ‡§Ö‡§∞‡•ç‡§ú‡§ø‡§§",
    nextQuestion: "‡§Ö‡§ó‡§≤‡§æ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®",
    completeQuiz: "‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§∞‡•á‡§Ç",
    easy: "‡§Ü‡§∏‡§æ‡§®",
    medium: "‡§Æ‡§ß‡•ç‡§Ø‡§Æ",
    hard: "‡§ï‡§†‡§ø‡§®",

    // Score Display
    totalXpLabel: "‡§ï‡•Å‡§≤ XP",
    levelLabel: "‡§∏‡•ç‡§§‡§∞",
    dayStreakLabel: "‡§¶‡§ø‡§® ‡§ï‡•Ä ‡§≤‡§ï‡•Ä‡§∞",
    progressToLevel: "‡§∏‡•ç‡§§‡§∞ {level} ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ó‡§§‡§ø",
    xpNeeded: "{xp} XP ‡§ö‡§æ‡§π‡§ø‡§è",
    achievementsCount: "{count} ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡§æ‡§Ç",
    rising: "‡§¨‡§¢‡§º ‡§∞‡§π‡§æ ‡§π‡•à",

    // Daily Challenges
    dailyChallenges: "‡§¶‡•à‡§®‡§ø‡§ï ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡§æ‡§Ç",
    timeLeft: "{time} ‡§¨‡§ö‡§æ ‡§π‡•à",
    fractionMaster: "‡§≠‡§ø‡§®‡•ç‡§® ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞",
    circuitDetective: "‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü ‡§°‡§ø‡§ü‡•á‡§ï‡•ç‡§ü‡§ø‡§µ",
    codeNinja: "‡§ï‡•ã‡§° ‡§®‡§ø‡§Ç‡§ú‡§æ",
    solveFractionProblems: "10 ‡§≠‡§ø‡§®‡•ç‡§® ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§∏‡§π‡•Ä ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§π‡§≤ ‡§ï‡§∞‡•á‡§Ç",
    buildWorkingCircuits: "‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≤‡§æ ‡§Æ‡•á‡§Ç 3 ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü ‡§¨‡§®‡§æ‡§è‡§Ç",
    completePythonChallenges: "5 Python ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§™‡•Ç‡§∞‡•Ä ‡§ï‡§∞‡•á‡§Ç",
    minLimit: "{min}‡§Æ‡§ø‡§®‡§ü ‡§∏‡•Ä‡§Æ‡§æ",

    // Achievements System
    achievementsTitle: "‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡§æ‡§Ç",
    unlocked: "‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ",
    total: "‡§ï‡•Å‡§≤",
    firstSteps: "‡§™‡§π‡§≤‡•á ‡§ï‡§¶‡§Æ",
    streakMaster: "‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ï ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞",
    mathWizard: "‡§ó‡§£‡§ø‡§§ ‡§ú‡§æ‡§¶‡•Ç‡§ó‡§∞",
    scienceExplorer: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§ñ‡•ã‡§ú‡§ï‡§∞‡•ç‡§§‡§æ",
    stemLegend: "STEM ‡§ï‡§ø‡§Ç‡§µ‡§¶‡§Ç‡§§‡•Ä",
    completeFirstGame: "‡§Ö‡§™‡§®‡§æ ‡§™‡§π‡§≤‡§æ ‡§ñ‡•á‡§≤ ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç",
    maintainLearningStreak: "7-‡§¶‡§ø‡§® ‡§ï‡•Ä ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§≤‡§ï‡•Ä‡§∞ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç",
    scorePerfectMathGames: "10 ‡§ó‡§£‡§ø‡§§ ‡§ñ‡•á‡§≤‡•ã‡§Ç ‡§Æ‡•á‡§Ç 100% ‡§∏‡•ç‡§ï‡•ã‡§∞ ‡§ï‡§∞‡•á‡§Ç",
    completeAllLabExperiments: "‡§∏‡§≠‡•Ä ‡§Ü‡§≠‡§æ‡§∏‡•Ä ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≤‡§æ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§™‡•Ç‡§∞‡•á ‡§ï‡§∞‡•á‡§Ç",
    solveProgrammingChallenges: "50 ‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§ö‡•Å‡§®‡•å‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§π‡§≤ ‡§ï‡§∞‡•á‡§Ç",
    reachLevel50AllSubjects: "‡§∏‡§≠‡•Ä ‡§µ‡§ø‡§∑‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§§‡§∞ 50 ‡§§‡§ï ‡§™‡§π‡•Å‡§Ç‡§ö‡•á‡§Ç",
    common: "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø",
    rare: "‡§¶‡•Å‡§∞‡•ç‡§≤‡§≠",
    epic: "‡§Æ‡§π‡§æ‡§ï‡§æ‡§µ‡•ç‡§Ø",
    legendary: "‡§™‡•å‡§∞‡§æ‡§£‡§ø‡§ï",
    unlockedOn: "{date} ‡§ï‡•ã ‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ",
    all: "‡§∏‡§≠‡•Ä",

    // Material Upload
    uploadLearningMaterials: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
    subject: "‡§µ‡§ø‡§∑‡§Ø",
    gradeLevel: "‡§ï‡§ï‡•ç‡§∑‡§æ ‡§∏‡•ç‡§§‡§∞",
    materialTitle: "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï",
    description: "‡§µ‡§ø‡§µ‡§∞‡§£",
    selectFiles: "‡§´‡§æ‡§á‡§≤‡•á‡§Ç ‡§ö‡•Å‡§®‡•á‡§Ç",
    uploading: "‡§Ö‡§™‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...",
    uploadMaterials: "‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
    uploadedMaterials: "‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡•Ä ‡§ó‡§à ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä",
    selectSubject: "‡§µ‡§ø‡§∑‡§Ø ‡§ö‡•Å‡§®‡•á‡§Ç",
    selectGrade: "‡§ï‡§ï‡•ç‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç",
    enterDescriptiveTitle: "‡§è‡§ï ‡§µ‡§∞‡•ç‡§£‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç",
    describeLearningMaterial: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ï‡§æ ‡§µ‡§∞‡•ç‡§£‡§® ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§á‡§∏‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è",
    dragDropFiles: "‡§´‡§æ‡§á‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§Ø‡§π‡§æ‡§Ç ‡§ñ‡•Ä‡§Ç‡§ö‡•á‡§Ç ‡§î‡§∞ ‡§õ‡•ã‡§°‡§º‡•á‡§Ç, ‡§Ø‡§æ ‡§ö‡•Å‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç",
    selectedFiles: "‡§ö‡§Ø‡§®‡§ø‡§§ ‡§´‡§æ‡§á‡§≤‡•á‡§Ç",
    uploaded: "‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ",
    grade6: "‡§ï‡§ï‡•ç‡§∑‡§æ 6",
    grade7: "‡§ï‡§ï‡•ç‡§∑‡§æ 7",
    bothGrades: "‡§¶‡•ã‡§®‡•ã‡§Ç ‡§ï‡§ï‡•ç‡§∑‡§æ‡§è‡§Ç",

    // File Types and Sizes
    bytes: "‡§¨‡§æ‡§á‡§ü‡•ç‡§∏",
    kb: "KB",
    mb: "MB",
    gb: "GB",

    // Game Specific Terms
    memoryMatchPairs: "8 ‡§ú‡•ã‡§°‡§º‡•á ‡§Æ‡•à‡§ö ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è",
    fewerMovesHigherScore: "‡§ï‡§Æ ‡§ö‡§æ‡§≤‡•á‡§Ç = ‡§Ö‡§ß‡§ø‡§ï ‡§∏‡•ç‡§ï‡•ã‡§∞",
    upTo150XP: "150 XP ‡§§‡§ï",
    upTo100XP: "100 XP ‡§§‡§ï",
    upTo110XP: "110 XP ‡§§‡§ï",
    pythonBasics: "Python ‡§Æ‡•Ç‡§≤ ‡§¨‡§æ‡§§‡•á‡§Ç",
    codeProblems: "5 ‡§ï‡•ã‡§° ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç",
    perCorrect: "‡§™‡•ç‡§∞‡§§‡§ø ‡§∏‡§π‡•Ä 20",
    perCorrectRange: "‡§™‡•ç‡§∞‡§§‡§ø ‡§∏‡§π‡•Ä 15-25",
    minutes: "‡§Æ‡§ø‡§®‡§ü",

    // Time Formats
    hoursMinutes: "{hours}‡§ò‡§Ç {minutes}‡§Æ‡§ø",
    minutesSeconds: "{minutes}:{seconds}",

    // Common UI Elements
    continue: "‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç",
    cancel: "‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç",
    save: "‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç",
    delete: "‡§π‡§ü‡§æ‡§è‡§Ç",
    edit: "‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
    close: "‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç",
    open: "‡§ñ‡•ã‡§≤‡•á‡§Ç",
    loading: "‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...",
    error: "‡§§‡•ç‡§∞‡•Å‡§ü‡§ø",
    success: "‡§∏‡§´‡§≤‡§§‡§æ",
    warning: "‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä",
    info: "‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä",
  },

  mr: {
    // App Info
    appName: "STEM ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞",
    ruralLearning: "‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§µ‡•ç‡§Ø‡§æ‡§∏‡§™‡•Ä‡§†",
    appDescription: "‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•ç‡§Ø‡§æ‡§Ç‡§∏‡§æ‡§†‡•Ä ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§∏‡§π‡§æ‡§Ø‡•ç‡§Ø ‡§Ü‡§£‡§ø ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§ñ‡•á‡§≥‡§æ‡§Ç‡§∏‡§π ‡§™‡§∞‡§∏‡•ç‡§™‡§∞‡§∏‡§Ç‡§µ‡§æ‡§¶‡•Ä STEM ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£‡•§",
    learnChamp: "‡§≤‡§∞‡•ç‡§®‡§ö‡•Ö‡§Æ‡•ç‡§™",
    stemGamesOffline: "STEM ‡§ñ‡•á‡§≥ ‚Äî ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§Ü‡§£‡§ø ‡§∏‡•ç‡§•‡§æ‡§®‡§ø‡§ï ‡§≠‡§æ‡§∑‡§æ",

    // Navigation & Status
    online: "‡§ë‡§®‡§≤‡§æ‡§á‡§®",
    offline: "‡§ë‡§´‡§≤‡§æ‡§á‡§®",
    offlineMode: "‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§Æ‡•ã‡§°",
    syncing: "‡§∏‡§ø‡§Ç‡§ï ‡§π‡•ã‡§§ ‡§Ü‡§π‡•á...",
    synced: "‡§∏‡§ø‡§Ç‡§ï ‡§ù‡§æ‡§≤‡•á",
    pendingSync: "‡§∏‡§ø‡§Ç‡§ï ‡§¨‡§æ‡§ï‡•Ä ‡§Ü‡§π‡•á ({count} ‡§Ü‡§Ø‡§ü‡§Æ)",
    neverSynced: "‡§ï‡§ß‡•Ä‡§ö ‡§∏‡§ø‡§Ç‡§ï ‡§ù‡§æ‡§≤‡•á ‡§®‡§æ‡§π‡•Ä",
    lastSyncDays: "‡§∂‡•á‡§µ‡§ü‡§ö‡•á ‡§∏‡§ø‡§Ç‡§ï {days} ‡§¶‡§ø‡§µ‡§∏‡§æ‡§Ç‡§™‡•Ç‡§∞‡•ç‡§µ‡•Ä",
    lastSyncHours: "‡§∂‡•á‡§µ‡§ü‡§ö‡•á ‡§∏‡§ø‡§Ç‡§ï {hours} ‡§§‡§æ‡§∏‡§æ‡§Ç‡§™‡•Ç‡§∞‡•ç‡§µ‡•Ä",
    lastSyncMinutes: "‡§∂‡•á‡§µ‡§ü‡§ö‡•á ‡§∏‡§ø‡§Ç‡§ï {minutes} ‡§Æ‡§ø‡§®‡§ø‡§ü‡§æ‡§Ç‡§™‡•Ç‡§∞‡•ç‡§µ‡•Ä",
    justSynced: "‡§Ü‡§§‡•ç‡§§‡§æ‡§ö ‡§∏‡§ø‡§Ç‡§ï ‡§ù‡§æ‡§≤‡•á",

    dashboard: "‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    challenges: "‡§Ü‡§µ‡•ç‡§π‡§æ‡§®‡•á",
    achievements: "‡§Ø‡§∂",
    topics: "‡§µ‡§ø‡§∑‡§Ø",
    avatar: "‡§Ö‡§µ‡§§‡§æ‡§∞",
    games: "‡§ñ‡•á‡§≥",

    quickGames: "‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§ñ‡•á‡§≥",
    recentAchievements: "‡§Ö‡§≤‡•Ä‡§ï‡§°‡•Ä‡§≤ ‡§Ø‡§∂",
    dailyChallenge: "‡§¶‡•à‡§®‡§Ç‡§¶‡§ø‡§® ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®",
    todaysChallenge: "‡§Ü‡§ú‡§ö‡•á ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®",
    studyTopics: "‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§µ‡§ø‡§∑‡§Ø",
    avatarCustomization: "‡§Ö‡§µ‡§§‡§æ‡§∞ ‡§∏‡§æ‡§®‡•Å‡§ï‡•Ç‡§≤‡§®",

    gradeSubjects: "‡§á‡§Ø‡§§‡•ç‡§§‡§æ {grade} ‡§µ‡§ø‡§∑‡§Ø",
    gradeDashboard: "‡§á‡§Ø‡§§‡•ç‡§§‡§æ {grade} ‡§°‡•Ö‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    gradeTopics: "‡§á‡§Ø‡§§‡•ç‡§§‡§æ {grade} ‡§µ‡§ø‡§∑‡§Ø",

    welcomeBack: "‡§™‡§∞‡§§ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§, {name}!",
    youngExplorer: "‡§§‡§∞‡•Å‡§£ ‡§∂‡•ã‡§ß‡§ï",
    stemChampion: "STEM ‡§ö‡•Ö‡§Æ‡•ç‡§™‡§ø‡§Ø‡§®",
    stemExplorer: "STEM ‡§∂‡•ã‡§ß‡§ï",
    readyToDiscover: "‡§Ü‡§∂‡•ç‡§ö‡§∞‡•ç‡§Ø‡§ï‡§æ‡§∞‡§ï STEM ‡§∏‡§Ç‡§ï‡§≤‡•ç‡§™‡§®‡§æ ‡§∂‡•ã‡§ß‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§§‡§Ø‡§æ‡§∞ ‡§Ü‡§π‡§æ‡§§?",
    readyToMaster: "‡§™‡•ç‡§∞‡§ó‡§§ STEM ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®‡§æ‡§Ç‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§™‡•ç‡§∞‡§≠‡•Å‡§§‡•ç‡§µ ‡§Æ‡§ø‡§≥‡§µ‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§§‡§Ø‡§æ‡§∞ ‡§Ü‡§π‡§æ‡§§?",

    progressToNextLevel: "‡§™‡•Å‡§¢‡•Ä‡§≤ ‡§∏‡•ç‡§§‡§∞‡§æ‡§µ‡§∞‡•Ä‡§≤ ‡§™‡•ç‡§∞‡§ó‡§§‡•Ä",
    totalXP: "‡§è‡§ï‡•Ç‡§£ XP",
    dayStreak: "‡§¶‡§ø‡§µ‡§∏‡§æ‡§Ç‡§ö‡•Ä ‡§™‡§ü‡•ç‡§ü‡•Ä",
    level: "‡§∏‡•ç‡§§‡§∞",

    mathematics: "‡§ó‡§£‡§ø‡§§",
    science: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®",
    technology: "‡§§‡§Ç‡§§‡•ç‡§∞‡§ú‡•ç‡§û‡§æ‡§®",
    engineering: "‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§Ç‡§§‡•ç‡§∞‡§ø‡§ï‡•Ä",

    numberNinja: "‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§®‡§ø‡§®‡•ç‡§ú‡§æ",
    virtualLab: "‡§Ü‡§≠‡§æ‡§∏‡•Ä ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≥‡§æ",
    codeQuest: "‡§ï‡•ã‡§° ‡§∂‡•ã‡§ß",
    mathPuzzles: "‡§ó‡§£‡§ø‡§§ ‡§ï‡•ã‡§°‡•Ä ‡§Ü‡§£‡§ø ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®‡•á",
    scienceExperiments: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó",
    programmingChallenges: "‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®‡•á",

    startChallenge: "‡§Ü‡§µ‡•ç‡§π‡§æ‡§® ‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§æ",
    viewAllGames: "‡§∏‡§∞‡•ç‡§µ ‡§ñ‡•á‡§≥ ‡§™‡§π‡§æ",
    startYourFirstQuiz: "‡§§‡•Å‡§Æ‡§ö‡•Ä ‡§™‡§π‡§ø‡§≤‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡§Æ‡§Ç‡§ú‡•Å‡§∑‡§æ ‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§æ",

    noAchievementsYet: "‡§Ö‡§ú‡•Ç‡§® ‡§ï‡•ã‡§£‡§§‡•á‡§π‡•Ä ‡§Ø‡§∂ ‡§®‡§æ‡§π‡•Ä",
    completeFirstQuiz: "‡§Ø‡§∂ ‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡§∞‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§§‡•Å‡§Æ‡§ö‡•Ä ‡§™‡§π‡§ø‡§≤‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡§Æ‡§Ç‡§ú‡•Å‡§∑‡§æ ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§∞‡§æ!",
    quizzesCompleted: "‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡§Æ‡§Ç‡§ú‡•Å‡§∑‡§æ ‡§™‡•Ç‡§∞‡•ç‡§£",
    progress: "‡§™‡•ç‡§∞‡§ó‡§§‡•Ä",

    // Offline Messages
    youreOffline: "‡§§‡•Å‡§Æ‡•ç‡§π‡•Ä ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§Ü‡§π‡§æ‡§§",
    noConnection: "‡§ï‡•ã‡§£‡§§‡•á‡§π‡•Ä ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§Ü‡§¢‡§≥‡§≤‡•á ‡§®‡§æ‡§π‡•Ä",
    continueOffline: "‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§∂‡§ø‡§ï‡§£‡•á ‡§∏‡•Å‡§∞‡•Ç ‡§†‡•á‡§µ‡§æ",
    tryAgain: "‡§™‡•Å‡§®‡•ç‡§π‡§æ ‡§™‡•ç‡§∞‡§Ø‡§§‡•ç‡§® ‡§ï‡§∞‡§æ",

    // Common Actions
    back: "‡§Æ‡§æ‡§ó‡•á",

    // Authentication & Login
    studentLogin: "‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä ‡§≤‡•â‡§ó‡§ø‡§®",
    facultyLogin: "‡§™‡•ç‡§∞‡§æ‡§ß‡•ç‡§Ø‡§æ‡§™‡§ï ‡§≤‡•â‡§ó‡§ø‡§®",
    studentSignIn: "‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä ‡§∏‡§æ‡§á‡§® ‡§á‡§®",
    studentSignUp: "‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä ‡§∏‡§æ‡§á‡§® ‡§Ö‡§™",
    facultySignIn: "‡§™‡•ç‡§∞‡§æ‡§ß‡•ç‡§Ø‡§æ‡§™‡§ï ‡§∏‡§æ‡§á‡§® ‡§á‡§®",
    facultySignUp: "‡§™‡•ç‡§∞‡§æ‡§ß‡•ç‡§Ø‡§æ‡§™‡§ï ‡§∏‡§æ‡§á‡§® ‡§Ö‡§™",
    tryAsGuest: "‡§™‡§æ‡§π‡•Å‡§£‡•á ‡§Æ‡•ç‡§π‡§£‡•Ç‡§® ‡§™‡•ç‡§∞‡§Ø‡§§‡•ç‡§® ‡§ï‡§∞‡§æ",
    installApp: "‡§Ö‡•Ö‡§™ ‡§á‡§®‡•ç‡§∏‡•ç‡§ü‡•â‡§≤ ‡§ï‡§∞‡§æ",

    // Home Page
    learnStemThrough: "STEM ‡§∂‡§ø‡§ï‡§æ",
    funGames: "‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§ñ‡•á‡§≥‡§æ‡§Ç‡§¶‡•ç‡§µ‡§æ‡§∞‡•á",
    makingLearningFun: "‡§∂‡§ø‡§ï‡§£‡•á ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§¨‡§®‡§µ‡§£‡•á",

    // Games
    memoryMaster: "‡§Æ‡•á‡§Æ‡§∞‡•Ä ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞",
    scienceMemoryGame: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§Æ‡•á‡§Æ‡§∞‡•Ä ‡§ó‡•á‡§Æ",
    timeLimit: "‡§µ‡•á‡§≥ ‡§Æ‡§∞‡•ç‡§Ø‡§æ‡§¶‡§æ",
    goal: "‡§ß‡•ç‡§Ø‡•á‡§Ø",
    challenge: "‡§Ü‡§µ‡•ç‡§π‡§æ‡§®",
    xpReward: "XP ‡§¨‡§ï‡•ç‡§∑‡•Ä‡§∏",
    congratulations: "‡§Ö‡§≠‡§ø‡§®‡§Ç‡§¶‡§®!",
    timesUp: "‡§µ‡•á‡§≥ ‡§∏‡§Ç‡§™‡§≤‡•Ä!",
    matchesFound: "‡§ú‡•Å‡§≥‡§£‡•Ä ‡§∏‡§æ‡§™‡§°‡§≤‡•Ä",
    totalMoves: "‡§è‡§ï‡•Ç‡§£ ‡§π‡§æ‡§≤‡§ö‡§æ‡§≤‡•Ä",
    xpEarned: "XP ‡§Æ‡§ø‡§≥‡§µ‡§≤‡•á",
    playAgain: "‡§™‡•Å‡§®‡•ç‡§π‡§æ ‡§ñ‡•á‡§≥‡§æ",
    backToGames: "‡§ñ‡•á‡§≥‡§æ‡§Ç‡§ï‡§°‡•á ‡§™‡§∞‡§§",
    startGame: "‡§ñ‡•á‡§≥ ‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§æ",
    matches: "‡§ú‡•Å‡§≥‡§£‡•Ä",
    score: "‡§∏‡•ç‡§ï‡•ã‡§Ö‡§∞",

    // Code Challenge
    codeChallenge: "‡§ï‡•ã‡§° ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®",
    programmingChallenge: "‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®",
    language: "‡§≠‡§æ‡§∑‡§æ",
    points: "‡§ó‡•Å‡§£",
    codingComplete: "‡§ï‡•ã‡§°‡§ø‡§Ç‡§ó ‡§™‡•Ç‡§∞‡•ç‡§£!",
    variablesInPython: "Python ‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§µ‡•ç‡§π‡•á‡§∞‡§ø‡§è‡§¨‡§≤‡•ç‡§∏",
    forLoop: "For ‡§≤‡•Ç‡§™",
    ifStatement: "If ‡§∏‡•ç‡§ü‡•á‡§ü‡§Æ‡•á‡§Ç‡§ü",
    functionCall: "‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡•â‡§≤",
    listOperations: "‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ë‡§™‡§∞‡•á‡§∂‡§®‡•ç‡§∏",
    startCoding: "‡§ï‡•ã‡§°‡§ø‡§Ç‡§ó ‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§æ",
    correct: "‡§¨‡§∞‡•ã‡§¨‡§∞!",
    incorrect: "‡§ö‡•Å‡§ï‡•Ä‡§ö‡•á",

    // Brain Teaser
    brainBuster: "‡§¨‡•ç‡§∞‡•á‡§® ‡§¨‡§∏‡•ç‡§ü‡§∞",
    engineeringLogicPuzzles: "‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§Ç‡§§‡•ç‡§∞‡§ø‡§ï‡•Ä ‡§§‡§∞‡•ç‡§ï ‡§ï‡•ã‡§°‡•Ä",
    puzzles: "‡§ï‡•ã‡§°‡•Ä",
    brainTeasers: "‡§¨‡•ç‡§∞‡•á‡§® ‡§ü‡•Ä‡§ù‡§∞",
    startThinking: "‡§µ‡§ø‡§ö‡§æ‡§∞ ‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§æ",
    engineeringChallenge: "‡§Ö‡§≠‡§ø‡§Ø‡§æ‡§Ç‡§§‡•ç‡§∞‡§ø‡§ï‡•Ä ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®",
    greatThinking: "‡§â‡§§‡•ç‡§§‡§Æ ‡§µ‡§ø‡§ö‡§æ‡§∞!",
    notQuiteRight: "‡§Ö‡§ó‡§¶‡•Ä ‡§¨‡§∞‡•ã‡§¨‡§∞ ‡§®‡§æ‡§π‡•Ä",
    brainPowerComplete: "‡§¨‡•ç‡§∞‡•á‡§® ‡§™‡§æ‡§µ‡§∞ ‡§™‡•Ç‡§∞‡•ç‡§£!",

    // Quiz System
    quizComplete: "‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡§Æ‡§Ç‡§ú‡•Å‡§∑‡§æ ‡§™‡•Ç‡§∞‡•ç‡§£!",
    finalScore: "‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§∏‡•ç‡§ï‡•ã‡§Ö‡§∞",
    experiencePointsEarned: "‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ó‡•Å‡§£ ‡§Æ‡§ø‡§≥‡§µ‡§≤‡•á",
    nextQuestion: "‡§™‡•Å‡§¢‡•Ä‡§≤ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®",
    completeQuiz: "‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡§Æ‡§Ç‡§ú‡•Å‡§∑‡§æ ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§∞‡§æ",
    easy: "‡§∏‡•ã‡§™‡•á",
    medium: "‡§Æ‡§ß‡•ç‡§Ø‡§Æ",
    hard: "‡§ï‡§†‡•Ä‡§£",

    // Score Display
    totalXpLabel: "‡§è‡§ï‡•Ç‡§£ XP",
    levelLabel: "‡§∏‡•ç‡§§‡§∞",
    dayStreakLabel: "‡§¶‡§ø‡§µ‡§∏‡§æ‡§Ç‡§ö‡•Ä ‡§™‡§ü‡•ç‡§ü‡•Ä",
    progressToLevel: "‡§∏‡•ç‡§§‡§∞ {level} ‡§ö‡•Ä ‡§™‡•ç‡§∞‡§ó‡§§‡•Ä",
    xpNeeded: "{xp} XP ‡§π‡§µ‡•á",
    achievementsCount: "{count} ‡§Ø‡§∂",
    rising: "‡§µ‡§æ‡§¢‡§§ ‡§Ü‡§π‡•á",

    // Daily Challenges
    dailyChallenges: "‡§¶‡•à‡§®‡§Ç‡§¶‡§ø‡§® ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®‡•á",
    timeLeft: "{time} ‡§¨‡§æ‡§ï‡•Ä",
    fractionMaster: "‡§Ö‡§™‡•Ç‡§∞‡•ç‡§£‡§æ‡§Ç‡§ï ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞",
    circuitDetective: "‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü ‡§°‡§ø‡§ü‡•á‡§ï‡•ç‡§ü‡§ø‡§µ‡•ç‡§π",
    codeNinja: "‡§ï‡•ã‡§° ‡§®‡§ø‡§®‡•ç‡§ú‡§æ",
    solveFractionProblems: "10 ‡§Ö‡§™‡•Ç‡§∞‡•ç‡§£‡§æ‡§Ç‡§ï ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§Ø‡•ã‡§ó‡•ç‡§Ø‡§∞‡§ø‡§§‡•ç‡§Ø‡§æ ‡§∏‡•ã‡§°‡§µ‡§æ",
    buildWorkingCircuits: "‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≥‡•á‡§§ 3 ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§∞‡§§ ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü ‡§¨‡§®‡§µ‡§æ",
    completePythonChallenges: "5 Python ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®‡•á ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§∞‡§æ",
    minLimit: "{min}‡§Æ‡§ø‡§®‡§ø‡§ü ‡§Æ‡§∞‡•ç‡§Ø‡§æ‡§¶‡§æ",

    // Achievements System
    achievementsTitle: "‡§Ø‡§∂",
    unlocked: "‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡•á‡§≤‡•á",
    total: "‡§è‡§ï‡•Ç‡§£",
    firstSteps: "‡§™‡§π‡§ø‡§≤‡•Ä ‡§™‡§æ‡§µ‡§≤‡•á",
    streakMaster: "‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ï ‡§Æ‡§æ‡§∏‡•ç‡§ü‡§∞",
    mathWizard: "‡§ó‡§£‡§ø‡§§ ‡§ú‡§æ‡§¶‡•Ç‡§ó‡§æ‡§∞",
    scienceExplorer: "‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§∂‡•ã‡§ß‡§ï",
    stemLegend: "STEM ‡§¶‡§Ç‡§§‡§ï‡§•‡§æ",
    completeFirstGame: "‡§§‡•Å‡§Æ‡§ö‡§æ ‡§™‡§π‡§ø‡§≤‡§æ ‡§ñ‡•á‡§≥ ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§∞‡§æ",
    maintainLearningStreak: "7-‡§¶‡§ø‡§µ‡§∏‡§æ‡§Ç‡§ö‡•Ä ‡§∂‡§ø‡§ï‡§£‡•ç‡§Ø‡§æ‡§ö‡•Ä ‡§™‡§ü‡•ç‡§ü‡•Ä ‡§∞‡§æ‡§ñ‡§æ",
    scorePerfectMathGames: "10 ‡§ó‡§£‡§ø‡§§ ‡§ñ‡•á‡§≥‡§æ‡§Ç‡§Æ‡§ß‡•ç‡§Ø‡•á 100% ‡§∏‡•ç‡§ï‡•ã‡§Ö‡§∞ ‡§ï‡§∞‡§æ",
    completeAllLabExperiments: "‡§∏‡§∞‡•ç‡§µ ‡§Ü‡§≠‡§æ‡§∏‡•Ä ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≥‡§æ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ï‡§∞‡§æ",
    solveProgrammingChallenges: "50 ‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§Ü‡§µ‡•ç‡§π‡§æ‡§®‡•á ‡§∏‡•ã‡§°‡§µ‡§æ",
    reachLevel50AllSubjects: "‡§∏‡§∞‡•ç‡§µ ‡§µ‡§ø‡§∑‡§Ø‡§æ‡§Ç‡§Æ‡§ß‡•ç‡§Ø‡•á ‡§∏‡•ç‡§§‡§∞ 50 ‡§ó‡§æ‡§†‡§æ",
    common: "‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø",
    rare: "‡§¶‡•Å‡§∞‡•ç‡§Æ‡§ø‡§≥",
    epic: "‡§Æ‡§π‡§æ‡§ï‡§æ‡§µ‡•ç‡§Ø",
    legendary: "‡§™‡•å‡§∞‡§æ‡§£‡§ø‡§ï",
    unlockedOn: "{date} ‡§∞‡•ã‡§ú‡•Ä ‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡•á‡§≤‡•á",
    all: "‡§∏‡§∞‡•ç‡§µ",

    // Material Upload
    uploadLearningMaterials: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡§æ",
    subject: "‡§µ‡§ø‡§∑‡§Ø",
    gradeLevel: "‡§á‡§Ø‡§§‡•ç‡§§‡§æ ‡§∏‡•ç‡§§‡§∞",
    materialTitle: "‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø ‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï",
    description: "‡§µ‡§∞‡•ç‡§£‡§®",
    selectFiles: "‡§´‡§æ‡§á‡§≤‡•ç‡§∏ ‡§®‡§ø‡§µ‡§°‡§æ",
    uploading: "‡§Ö‡§™‡§≤‡•ã‡§° ‡§π‡•ã‡§§ ‡§Ü‡§π‡•á...",
    uploadMaterials: "‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡§æ",
    uploadedMaterials: "‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡•á‡§≤‡•á‡§≤‡•á ‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø",
    selectSubject: "‡§µ‡§ø‡§∑‡§Ø ‡§®‡§ø‡§µ‡§°‡§æ",
    selectGrade: "‡§á‡§Ø‡§§‡•ç‡§§‡§æ ‡§®‡§ø‡§µ‡§°‡§æ",
    enterDescriptiveTitle: "‡§µ‡§∞‡•ç‡§£‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï ‡§™‡•ç‡§∞‡§µ‡§ø‡§∑‡•ç‡§ü ‡§ï‡§∞‡§æ",
    describeLearningMaterial: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡§æ‡§π‡§ø‡§§‡•ç‡§Ø‡§æ‡§ö‡•á ‡§µ‡§∞‡•ç‡§£‡§® ‡§ï‡§∞‡§æ ‡§Ü‡§£‡§ø ‡§§‡•ç‡§Ø‡§æ‡§ö‡§æ ‡§µ‡§æ‡§™‡§∞ ‡§ï‡§∏‡§æ ‡§ï‡§∞‡§æ‡§µ‡§æ",
    dragDropFiles: "‡§´‡§æ‡§á‡§≤‡•ç‡§∏ ‡§Ø‡•á‡§•‡•á ‡§°‡•ç‡§∞‡•Ö‡§ó ‡§Ü‡§£‡§ø ‡§°‡•ç‡§∞‡•â‡§™ ‡§ï‡§∞‡§æ, ‡§ï‡§ø‡§Ç‡§µ‡§æ ‡§®‡§ø‡§µ‡§°‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡§æ",
    selectedFiles: "‡§®‡§ø‡§µ‡§°‡§≤‡•á‡§≤‡•ç‡§Ø‡§æ ‡§´‡§æ‡§á‡§≤‡•ç‡§∏",
    uploaded: "‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡•á‡§≤‡•á",
    grade6: "‡§á‡§Ø‡§§‡•ç‡§§‡§æ 6",
    grade7: "‡§á‡§Ø‡§§‡•ç‡§§‡§æ 7",
    bothGrades: "‡§¶‡•ã‡§®‡•ç‡§π‡•Ä ‡§á‡§Ø‡§§‡•ç‡§§‡§æ",

    // File Types and Sizes
    bytes: "‡§¨‡§æ‡§á‡§ü‡•ç‡§∏",
    kb: "KB",
    mb: "MB",
    gb: "GB",

    // Game Specific Terms
    memoryMatchPairs: "8 ‡§ú‡•ã‡§°‡•ç‡§Ø‡§æ ‡§ú‡•Å‡§≥‡§µ‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä",
    fewerMovesHigherScore: "‡§ï‡§Æ‡•Ä ‡§π‡§æ‡§≤‡§ö‡§æ‡§≤‡•Ä = ‡§ú‡§æ‡§∏‡•ç‡§§ ‡§∏‡•ç‡§ï‡•ã‡§Ö‡§∞",
    upTo150XP: "150 XP ‡§™‡§∞‡•ç‡§Ø‡§Ç‡§§",
    upTo100XP: "100 XP ‡§™‡§∞‡•ç‡§Ø‡§Ç‡§§",
    upTo110XP: "110 XP ‡§™‡§∞‡•ç‡§Ø‡§Ç‡§§",
    pythonBasics: "Python ‡§Æ‡•Ç‡§≤‡§≠‡•Ç‡§§ ‡§ó‡•ã‡§∑‡•ç‡§ü‡•Ä",
    codeProblems: "5 ‡§ï‡•ã‡§° ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ",
    perCorrect: "‡§™‡•ç‡§∞‡§§‡§ø ‡§¨‡§∞‡•ã‡§¨‡§∞ 20",
    perCorrectRange: "‡§™‡•ç‡§∞‡§§‡§ø ‡§¨‡§∞‡•ã‡§¨‡§∞ 15-25",
    minutes: "‡§Æ‡§ø‡§®‡§ø‡§ü‡•á",

    // Time Formats
    hoursMinutes: "{hours}‡§§‡§æ {minutes}‡§Æ‡§ø",
    minutesSeconds: "{minutes}:{seconds}",

    // Common UI Elements
    continue: "‡§∏‡•Å‡§∞‡•Ç ‡§†‡•á‡§µ‡§æ",
    cancel: "‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡§æ",
    save: "‡§ú‡§§‡§® ‡§ï‡§∞‡§æ",
    delete: "‡§π‡§ü‡§µ‡§æ",
    edit: "‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡§æ",
    close: "‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡§æ",
    open: "‡§â‡§ò‡§°‡§æ",
    loading: "‡§≤‡•ã‡§° ‡§π‡•ã‡§§ ‡§Ü‡§π‡•á...",
    error: "‡§§‡•ç‡§∞‡•Å‡§ü‡•Ä",
    success: "‡§Ø‡§∂",
    warning: "‡§ö‡•á‡§§‡§æ‡§µ‡§£‡•Ä",
    info: "‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä",
  },
}

interface I18nContextType {
  currentLanguage: Language
  setLanguage: (language: Language) => void
  t: (key: string, params?: Record<string, any>) => string
  availableLanguages: LanguageData[]
}

const I18nContext = createContext<I18nContextType | undefined>(undefined)

export function I18nProvider({ children }: { children: ReactNode }) {
  const [currentLanguage, setCurrentLanguage] = useState<Language>("en")
  const [isClient, setIsClient] = useState(false)

  useEffect(() => {
    setIsClient(true)
    const savedLanguage = localStorage.getItem("language") as Language
    if (savedLanguage && availableLanguages.find((lang) => lang.code === savedLanguage)) {
      setCurrentLanguage(savedLanguage)
    }
  }, [])

  const setLanguage = (language: Language) => {
    setCurrentLanguage(language)
    if (isClient) {
      localStorage.setItem("language", language)
    }
  }

  const t = (key: string, params?: Record<string, any>): string => {
    const translation =
      translations[currentLanguage]?.[key as keyof (typeof translations)[typeof currentLanguage]] ||
      translations.en[key as keyof typeof translations.en] ||
      key

    if (params && typeof translation === "string") {
      return translation.replace(/\{(\w+)\}/g, (match, paramKey) => {
        return params[paramKey]?.toString() || match
      })
    }

    return translation as string
  }

  return (
    <I18nContext.Provider value={{ currentLanguage, setLanguage, t, availableLanguages }}>
      {children}
    </I18nContext.Provider>
  )
}

export function useTranslation() {
  const context = useContext(I18nContext)
  if (context === undefined) {
    throw new Error("useTranslation must be used within an I18nProvider")
  }
  return context
}
